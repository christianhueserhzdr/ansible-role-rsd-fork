# SPDX-FileCopyrightText: 2022 Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: 2022 Helmholtz-Zentrum Dresden-Rossendorf (HZDR)
#
# SPDX-License-Identifier: Apache-2.0

---
stages:
  - "lint"
  - "test"

variables:
  # tell Python-based tools to force color output
  PY_COLORS: '1'
  ANSIBLE_FORCE_COLOR: '1'

.before_script_template: &before_script
  # Ansible refuses to read from a world-writeable folder
  - "chmod 0750 $CI_PROJECT_DIR"
  - "pip install -U pip"
  - "pip install --ignore-installed poetry"
  - "poetry install"

include:
  - project: "hifis/templates/gitlab-ci"
    file: "/templates/reuse-compliance.yml"

validate:
  stage: "lint"
  image: "python:3.8"
  before_script:
    - *before_script
  script:
#    - "poetry run molecule lint"
    - "poetry run ansible-lint -v --force-color --offline"
    - "poetry run yamllint --strict --format colored ."

#test:
#  extends: ".moleculetest"
#  parallel:
#    matrix:
#      - MOLECULE_DISTRO:
#          - "ubuntu2004"
#          - "debian10"
#
#.moleculetest:
#  stage: "test"
#  image: "docker:latest"
#  variables:
#    POETRY_VIRTUALENVS_PATH: "$CI_PROJECT_DIR/.cache/venv"
#    POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.cache/poetry"
#    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
#  services:
#    - "docker:dind"
#  before_script:
#    - "apk update && apk add --no-cache
#      python3-dev py3-pip gcc git curl build-base
#      autoconf automake py3-cryptography linux-headers
#      musl-dev libffi-dev openssl-dev openssh cargo"
#    - "docker info"
#    - "python3 --version"
#    - *before_script
#  script:
#    - "poetry run molecule test"
#  cache:
#    paths:
#      - ".cache"

...
